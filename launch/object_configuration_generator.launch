<!--Launches a publisher which publishes AsrObject messages in order to to "feed" the recognizer with data, even if no cameras are used. Visualizes pubished data via RViz. This file wip. @author Fabian Hanselmann, @version See SVN.-->
<launch>
  <!-- Don't forget to pass a map.yaml to the map_server -->
  <node name="map_server" pkg="map_server" type="map_server" args="" required="true"/> -->
  
  <node name="object_configuration_generator" pkg="asr_ism" type="object_configuration_generator" output="screen">

    <!--Load some parameters recorder, trainer, recognizer and fake_data_publisher have in common.-->
    <rosparam file="$(find asr_ism)/launch/helpers/sqlitedb.yaml"/>

    <!--Load some parameters trainer, recognizer and fake_data_publisher have in common.-->
    <rosparam file="$(find asr_ism)/launch/helpers/visualization.yaml"/>

    <!--Ros topic on which the objects are visualized-->
    <param name="object_configuration_visualization_topic" value="object_configuration"/>
    
    <!--Which pattern should be loaded-->
    <rosparam param = "object_configuration_pattern_names">[]</rosparam>
    
    <!--Where the output xml file should be written-->
    <param name="output_file_path" value=""/>
    
     <!--The path to a previously created configuration. Only use this if you want to reload that configuration-->
    <param name="config_file_path" value=""/>

  </node>
</launch>
